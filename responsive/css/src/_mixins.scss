/* 
# Functions & Mixins
*/

/* 
## Functions

*/

/* 
`propety: half($value);`

数値を半分する関数。（小数点は切り上げ
）

<pre>
.image {
  width: half(160px); // 80px;
  height: half(160px); // 80px;
}
</pre>
　
*/
@function half($value) {
   @return ceil($value / 2);
}

/* 
## Mixins
*/

/*
### Gradient

汎用的に使われるグラデーションパターンを定義する。

*/

// @import "bourbon/bourbon";

 // デフォルトボタンに使われるようなグレーのグラデーション

@mixin gradient-button-default {
  @include background(linear-gradient(top, rgba(255,255,255,.8) 0%, rgba(235,235,235,.8) 100%));
}


 //アプリのヘッダーバーに使われるグラデーション
@mixin gradient-appbar {
  @include background(linear-gradient(top, rgba(255,82,185,1) 0%,rgba(252,72,180,1) 26%,rgba(244,42,165,1) 74%,rgba(241,32,159,1) 100%));
}

//メールバッジに使われるグラデーション
@mixin gradient-badge-mailbox {
  @include background(linear-gradient(top, rgba(255,169,215,1) 0%,rgba(255,141,203,1) 11%,rgba(255,79,174,1) 33%,rgba(255,46,160,1) 48%,rgba(255,28,151,1) 52%,rgba(255,28,151,1) 96%,rgba(255,73,172,1) 100% ));
}

//iOSボタンのdanger
@mixin gradient-button-ios-danger {
  @include background(linear-gradient(top, rgba(233,161,164,1) 0%,rgba(233,161,164,1) 2%,rgba(225,129,133,1) 3%,rgba(221,118,123,1) 28%,rgba(215,100,106,1) 51%,rgba(207,47,44,1) 52%,rgba(207,47,44,1) 53%,rgba(204,40,36,1) 54%,rgba(200,34,32,1) 70%,rgba(191,34,32,1) 100%));
}

//iOSボタンのcancel
@mixin gradient-button-ios-cancel {
  @include background(linear-gradient(top, rgba(108,113,120,1) 0%,rgba(108,113,120,1) 2%,rgba(94,99,106,1) 3%,rgba(67,73,81,1) 28%,rgba(38,44,54,1) 51%,rgba(22,30,39,1) 52%,rgba(23,31,40,1) 64%,rgba(33,41,51,1) 88%,rgba(36,44,53,1) 100%));
}

//アクションシートボタンの背景
@mixin gradient-actionsheet {
  @include background(linear-gradient(top, rgba(208,211,215,1) 0%,rgba(141,148,157,1) 1%,rgba(100,107,117,1) 12%,rgba(94,102,112,1) 14%,rgba(78,84,93,1) 16%,rgba(78,84,93,1) 100%));
}

//アクションシートボタンの背景
@mixin gradient-actionsheet-button {
  @include background(linear-gradient(top, rgba(39,41,46,1) 0%,rgba(46,48,54,1) 34%,rgba(47,51,57,1) 37%,rgba(51,52,60,1) 48%,rgba(55,60,67,1) 67%,rgba(63,67,75,1) 100%));
}



/*
### Properties

CSS3などベンダープレフィックスが必要なプロパティのヘルパー。
*/

/*
#### Vender prefix property

ベンダープレフィックスをつける基本ミックスイン。
第３引数に必要なベンダーを指定する。`-vender-`

**TODO:**

- ルールを揃えるためにコード書き直す
*/

@mixin vendor($property,$value,$vendors:-webkit-){
  @each $prefix in $vendors {
    #{$prefix}#{$property}:$value;
  }
  #{$property}:$value;
}
@mixin rotate($value) {
  -ms-transform: rotate($value);
  -webkit-transform: rotate($value);
  transform: rotate($value);
}
@mixin skew($value) {
  -ms-transform: skew($value);
  -webkit-transform: skew($value);
  transform: skew($value);
}
@mixin translate($value) {
  -ms-transform: translate($value);
  -webkit-transform: translate($value);
  transform: translate($value);
}
@mixin transform-origin($value:"") {
  -ms-transform-origin: $value;
  -webkit-transform-origin: $value;
  transform-origin: $value;
}

/*
#### Image

画像関係を扱うミックスイン。

*/

// Experimental
@mixin x-image($src) {
  $imgWidth: image-width($src)/2;
  $imgHeight: image-height($src)/2;
  width: $imgWidth;
  height: $imgHeight;
  background-image: url($src);
}

@mixin x-content($content:"") {
  display: inline-block;
  content: "#{$content}";
}

 // 画像置換などに必要な指定を一括で定義する
@mixin image($width,$height,$bgurl:"",$bgWidth:100%,$bgHeight:100%) {
  width: half($width);
  height: half($height);
  @if ($bgurl != "") {
    background-image: url($bgurl);
  }
  @if ($bgWidth != 100% or $bgHeight != 100%) {
    @include background-size(half($bgWidth) half($bgHeight));
    } @else {
    @include background-size($bgWidth $bgHeight);
  }
}

 // backgroundの配置を高解像度対応にあわせて、座標値を半分にする
@mixin sprite-position($x,$y) {
  background-position: half($x) half($y);
}

/*
## Sprite by Koji Ishimoto
*/
//  Mixins
//-------------------------------------

// - @mixin  CSS Sprite for Retina Display
// - @param  $isParent {String} the first parameter is a string(parent or child)
// - @param  $map {Glob} the second parameter is a glob
// - @param  $map-item {Glob} the second parameter is a glob
// - @param  $isSameChild {Boolean} default is false
// - @usage  @include sprite(child, $map-tabs, home)
@mixin sprite($isParent, $map, $map-item: foo, $isSameChild: false) {
  @if not $isSameChild {
    @if $isParent == "parent" {
      background-image: sprite-url($map);
      background-repeat: no-repeat;
      background-size: round(image-width(sprite-path($map)) / 2) round(image-height(sprite-path($map)) / 2);
    } @else {
      $position-y: round(nth(sprite-position($map, $map-item), 2) / 2);
      width: round(image-width(sprite-file($map, $map-item)) / 2);
      height: round(image-height(sprite-file($map, $map-item)) / 2);
      background-position: 0 $position-y;
    }
  } @else {
    @if $isParent == "parent" {
      width: round(image-width(sprite-file($map, $map-item)) / 2);
      height: round(image-height(sprite-file($map, $map-item)) / 2);
      background-image: sprite-url($map);
      background-repeat: no-repeat;
      background-size: round(image-width(sprite-path($map)) / 2) round(image-height(sprite-path($map)) / 2);
    } @else {
      $position-y: round(nth(sprite-position($map, $map-item), 2) / 2);
      background-position: 0 $position-y;
    }
  }
}

// Sample
// $map-hoge: sprite-map("/img/sprite/hoge/*.png", $layout: horizontal);
// 
// .sprt-a { @include sprite(parent, $map-hoge); }
// .sprt-a-bird1 { @include sprite(child, $map-hoge, bird1); }
// .sprt-a-bird2 { @include sprite(child, $map-hoge, bird2); }
// .sprt-a-bird3 { @include sprite(child, $map-hoge, bird3); }
// .sprt-a-bird4 { @include sprite(child, $map-hoge, bird4); }

/*
## Snippet

よく使われるプロパティセットの定義。
*/

@mixin pe { // Pseudo-Element
  display: inline-block;
  content: "";
}

@mixin Helvetica {
  font-family: "Helvetica Neue",Helvetica, Arial;
}
@mixin Hiragino {
  font-family: "Hiragino Kaku Gothic ProN", sans-serif;
}
